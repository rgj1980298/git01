<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.group.five.dao.ScoreMapper" >
  <resultMap id="BaseResultMap" type="com.group.five.pojo.Score" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentId" property="studentid" jdbcType="VARCHAR" />
    <result column="examId" property="examid" jdbcType="INTEGER" />
    <result column="clazzId" property="clazzid" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, studentId, examId, clazzId, score, state, create_date, update_date, is_valid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    g.* ,coursename
    from t_exam_grade g
    left join t_exam e
    on g.examId=e.id
    where g.id = #{id,jdbcType=INTEGER}
    and g.is_valid=1
    and e.is_valid=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_exam_grade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.group.five.pojo.Score" >
    insert into t_exam_grade (id, studentId, examId, 
      clazzId, score, state, 
      create_date, update_date, is_valid
      )
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=VARCHAR}, #{examid,jdbcType=INTEGER}, 
      #{clazzid,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{isValid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.group.five.pojo.Score" >
    insert into t_exam_grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="coursename != null" >
        examId,
      </if>
      <if test="clazzid != null" >
        clazzId,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="coursename != null" >
        (SELECT
        id
        from
        t_exam c
        where
        c.is_valid = 1
        and coursename=#{coursename}
        and clazzId=#{clazzid}),
      </if>
      <if test="clazzid != null" >
        #{clazzid,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.group.five.pojo.Score" >
    update t_exam_grade
    <set >
      <if test="studentid != null" >
        studentId = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="coursename != null" >
        examId =
        (SELECT
        id
        from
        t_exam c
        where
        c.is_valid = 1
        and coursename=#{coursename}
        and clazzId=#{clazzid}),
      </if>
      <if test="clazzid != null" >
        clazzId = #{clazzid,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>

    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.group.five.pojo.Score" >
    update t_exam_grade
    set studentId = #{studentid,jdbcType=VARCHAR},
      examId = #{examid,jdbcType=INTEGER},
      clazzId = #{clazzid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--成绩管理 多条件查询 -->
  <select id="selectByParams" parameterType="com.group.five.query.ScoreQuery" resultType="com.group.five.pojo.Score">
    select
    s.*,u.username username,c.clazz_name,g.course_name
    from
    t_exam_grade s
    left join t_user u on s.studentId = u.id
    left join t_clazz c on s.clazzId = c.id
    left join t_exam ex on s.examId = ex.id
    left join t_course g on ex.courseId = g.id
    <where>
      s.is_valid = 1
      <if test="username != null and username != ''">
        and  username like concat("%",#{username},"%")
      </if>
      <if test="state != null and state != ''">
        and  state = #{state}
      </if>
      <if test="clazzname != null and clazzname != ''">
        and  clazz_name = #{clazzname}
      </if>

    </where>
  </select>

  <update id="deleteBatch">
    update
    t_exam_grade
    set
    is_valid = 0
    where
    id
    in
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </update>
  <!--查询包含指定学生的考试id-->
  <select id="selectExamId" parameterType="int" resultType="int">
    select
      examId
    from
      t_exam_grade
    where
      studentId=#{studentid}
    and
      is_valid = 1
  </select>

  <!--根据课程名称和班级号唯一确定考试编号-->
  <select id="queryExamId" resultType="int">
    select
      g.examId
    from
      t_exam_grade g
    left join
      t_exam e
    on e.id=g.examId
    where
      g.clazzId=#{param1}
      and
      coursename=#{param2}
      and
      g.is_valid = 1
      and
      e.is_valid = 1
  </select>

  <!--根据前台传来的id查examid-->
  <select id="selectexamid" parameterType="int" resultType="int">
    select examId
    from
      t_exam_grade
    where
      id=#{id}
      and
      is_valid = 1
  </select>
</mapper>